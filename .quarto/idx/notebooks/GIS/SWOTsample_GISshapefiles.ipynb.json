{"title":"SWOT Simulated North American Continent Hydrology Dataset","markdown":{"headingText":"SWOT Simulated North American Continent Hydrology Dataset","containsRefs":false,"markdown":"\n\n## Finding ways to visualize SWOT Simulated Shapefile Dataset\n\n### Learning Objectives:\n- Accessing SWOT shapefile hydrology dataset and visualizing it locally.\n- Accessing & visualizing dataset through the use of Geopandas & Matplotlib.\n\nThis tutorial is looking to explore geospatial libraries and visualizing vector datasets without the use of a GIS desktop software. \n\n### Dataset:\n\nSWOT_SIMULATED_NA_CONTINENT_L2_HR_RIVERSP_V1:\n\n>DOI: [https://doi.org/10.5067/KARIN-2RSP1](https://doi.org/10.5067/KARIN-2RSP1)\n\nThis SWOT simulated river data includes shapefiles of River Nodes and River Reaches. Shapefiles of SWOT sample data can be downloaded [here](https://search.earthdata.nasa.gov/search/granules?p=C2263384307-POCLOUD&pg[0][v]=f&pg[0][gsk]=-start_date&q=SWOT%20simulated&tl=1666291003.129!3!!). The single file this notebook will perform most analysis on can be downloaded [here](https://search.earthdata.nasa.gov/projects?p=C2263384307-POCLOUD!C2263384307-POCLOUD&pg[1][a]=2295808672!POCLOUD&pg[1][v]=t&pg[1][gsk]=-start_date&pg[1][m]=download&q=SWOT%20simulated&tl=1666291003!3!!).\n\n### Setting up Environments\n- Prior to running the notebook, the environments must be set correctly. \n- This notebook can be ran using both Python 3.9 and 3.10 as long as the libraries are correctly installed.\n- Utilizing Anaconda Navigator to create your enviroments. Accessing the Conda-Forge channel to install geopsatial libraries.\n- GDAL and GeoPandas will direct and install majority of the libraries you will need, but some libraries will need to be installed by searching them individually.\n\n### Libraries Needed\n\n### Opening a Single Shapefile\n\nUsing Geopandas to open & read a single shapefile. (Change the path to your pre-downloaded shapefile)\n\n### Converting a Shapefile\n\nIf you want a more in depth view of the datasets attributes you can convert it to a CSV. \n\nAlso if you would like to open up the dataset as a GeoJSON, Geopandas can help transform the dataset. \n\n### Plotting a Shapefile\n\nUsing Matplotlib to plot the shapefiles, then adding a basemap for context using the library Contextily.\n\nContextily offers a list of basemap providers that can be easily visualized.\n\nhttps://contextily.readthedocs.io/en/latest/intro_guide.html\n\n### Shapefile Attribute Visualization\n\nShapefiles have various attributes or variables with each column signifiying individual data values.\n\nPreviously we plotted by showcasing all the river reaches of that shapefile on the map. \n\nYou can also plot a shapefile based on a specific variable.\n\nWithin Matplotlib you can specifiy the column parameter based on the column within the data's attributes.\n\nFor the example below, we will look at the column 'wse' which stands for water surface elevation.\n\n### You can also specifiy which row of attributes you would like to plot using Pandas '.loc' or '.iloc'.\n\n### Querying a Shapefile\n\nIf you want to search for a specific reach id or a specific length of river reach that is possible through a spatial query using Geopandas. \n\nUtilizing comparison operators (>, <, ==, >=, <=).\n\nYou can zoom into a particular river reach by specifying itâ€™s row of attributes. Here we specify reach id# '75165000221' which is a section of the Brazos River in Texas.\n\n### You can specify river reaches that have a water surface elevation greater than 35 meters.\n\n## Bonus\n\nOpening a folder with multiple shapefiles\n\n- If you have multiple River Reaches or Nodes in a folder, it is possible to visualize all on one map.\n- Utilizing both Glob and Pathlib libraries to read the folder, then using Pandas concat to merge the reaches to its own variable.\n- Matplotlib Basemap offers the customization ability to create your own basemap.\n\nhttps://matplotlib.org/basemap/users/geography.html\n\n## Next Steps\n\n- This notebook has helped showcase how to visualize shapefile data without the use of a GIS desktop software.\n- Showcasing different ways of plotting based on variables and adding context to the map. \n- Local visualization was the first step, but the next goal is to move towards utilizing the cloud.\n"},"formats":{"html":{"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":true,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":false,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"jupyter"},"render":{"keep-tex":false,"keep-yaml":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"wrap","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[]},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","filters":["../../include-files.lua","quarto"],"toc":true,"output-file":"SWOTsample_GISshapefiles.html"},"language":{},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.1.251","theme":{"light":["cosmo","theme.scss"],"dark":["cosmo","theme-dark.scss"]},"code-copy":true},"extensions":{"book":{"multiFile":true}}}}}